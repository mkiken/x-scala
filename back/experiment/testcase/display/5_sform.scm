(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
(begin (define-syntax display-Macro (syntax-rules (V-and) ((_ ("Scala" "Paren" V-punc) ("Scala" "Brace" V-s ... V-and V-t)) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "VirtualExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-s #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-punc #\nul) #\nul)))))) V-+))) #\nul) #\nul)) ... ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-t #\nul) #\nul)))))) #\nul)))) #\nul)) #\nul)))) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Display ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((R-main- ((lambda () (function FunctionDefinition) (#\nul #\nul) ("Scala" "FunctionSignature" R-main- #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul R-args- ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Array-)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-String-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (R-Unit-)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* () (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " -> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "不動前") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "西小山") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "洗足") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" ((#\nul (display-Macro ("Scala" "Paren" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" " --> ") #\nul) #\nul)))) #\nul)) ("Scala" "Brace" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "目黒") #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "武蔵小山") #\nul) #\nul)))) #\nul) V-and ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "stringLiteral" "大岡山") #\nul) #\nul)))) #\nul))) #\nul))) #\nul) #\nul)))) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) V-+ ("Scala" "InfixExpression" (("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)))))) #\nul))) #\nul) #\nul)))) #\nul)) #\nul)))))) #\nul))))) #\nul (#\nul #\nul))))))) #\nul)
