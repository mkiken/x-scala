{
  "name": "sexpression",
  "version": "0.0.4",
  "description": "s-expression parser",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:f-kubotar/sexpression.git"
  },
  "keywords": [
    "s-expression",
    "sexp",
    "sexpression"
  ],
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*"
  },
  "author": {
    "name": "hadashiA"
  },
  "license": "BSD",
  "readme": "## Installation\n\n```shell\nnpm install sexpression\n```\n\n## Usage\n\n```javascript\nvar sexpression = require('sexpression');\n```\n\n```javascript\nsexpression.parse('()')\n//=> null\n\nsexpression.parse('(1 -2 3.45)')      \n//=> [1, -2, 3.45]\n\nsexpression.parse('(a b c)')          \n//=> [{ name: 'a' }, { name: 'b' }, { name: 'c' }]\n\nsexpression.parse('(a b (1 2) \"a\")')  \n//=> [{ name: 'a' }, { name: 'b' }, [1, 2], 'a']\n\nsexpression.parse('(:hoge 1 :fuga 2)')\n//=> { hoge: 1, fuga: 2 }\n\nsexpression.parse('(a b :hoge 1 :fuga 2 c)')\n//=> [{ name: 'a' }, { name: 'b'}, { hoge: 1, fuga: 2 }, { name: c }]\n\nsexpression.parse('(1 . 2)')\n//=> { car: 1, cdr: 2 }\n\nsexpression.parse('((hoge . 1) (fuga . 2))')\n//=> [{ car: { name: 'hoge'}, cdr: 1}, { car: { name: 'fuga' }, cdr: 2 }]\n```\n\n```javascript\nsexpression.stringify([]);           \n//=> 'nil'\n\nsexpression.stringify([1, -2, 3.45]) \n//=> '(1 -2 3.45)'\n\nsexpression.stringify([{ name: 'a' }, { name: 'b' }, [1, 2], 'a']) \n//=> '(a b (1 2) \"a\")'\n\nsexpression.stringify({ car: 1, cdr: 2})  \n//=> '(1 . 2)'\n\nsexpression.stringify([{ car: { name: 'hoge'}, cdr: 1}, { car: { name: 'fuga' }, cdr: 2 }])  \n//=> '((hoge . 1) (fuga . 2))'\n\nsexpression.stringify({ a: 1, b: 2})                     \n//=> '(:a 1 :b 2)'\n\nsexpression.stringify([1, { hoge: 1, fuga: 2 }, \"aaa\"])  \n//=> '(1 (:hoge 1 :fuga 2) \"aaa\")'\n\nsexpression.stringify({ a: 1, b: 2}, 'alist') \n//=> '((\"a\" . 1) (\"b\" . 2))'\n\nsexpression.stringify([1, { hoge: 1, fuga: 2 }, \"aaa\"], 'alist') \n//=> '(1 (('hoge' . 1) ('fuga' . 2)) 'aaa')'\n\n```\n\n```javascript\nsexpression.parse('hoge')  //=> { name: 'hoge' }\nsexpression.parse('hoge') instanceof sexpression.Symbol  //=> true\nsexpression.parse('hoge') === sexpression.parse('hoge')  //=> true\n```\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/f-kubotar/sexpression/issues"
  },
  "homepage": "https://github.com/f-kubotar/sexpression",
  "_id": "sexpression@0.0.4",
  "dist": {
    "shasum": "423b7afa9333a2769d973d2ce8c6df327af324f5"
  },
  "_from": "sexpression@",
  "_resolved": "https://registry.npmjs.org/sexpression/-/sexpression-0.0.4.tgz"
}
